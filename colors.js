// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

const Colors = {};

(() => {
  const strHash = (str) => {
    var hash = 0, i, chr;
    for (i = 0; i < str.length; i++) {
      chr   = str.charCodeAt(i);
      hash  = ((hash << 5) - hash) + chr;
      hash |= 0; // Convert to 32bit integer
    }
    return hash;
  };
  Colors.chooseRandom = (type,key) => {
    const i = Math.abs(strHash(key)) % Colors[type].length;
    return Colors[type][i];
    //return Colors[type][Math.floor((Math.random() * Colors[type].length))];
  };
})();



Colors.brick = [
  [0.5176,0.2392,0.1647],
  [0.3490,0.2196,0.2157],
  [0.5765,0.2549,0.1961],
  [0.4510,0.2941,0.2902],
  [0.7137,0.3686,0.3294],
  [0.7569,0.4745,0.3647],
];

Colors.stone = [
  [0.8510,0.8471,0.8392],
  [0.7020,0.6980,0.6824],
  [0.5255,0.5294,0.5490],
  [0.7804,0.7569,0.7098],
  [0.9451,0.8824,0.7922],
  [0.7569,0.6275,0.5059],
  [0.5490,0.4902,0.4627],
  [0.6235,0.5725,0.5412],
];

Colors.concrete = [
  [0.6834,0.4627,0.4196],
  [0.6510,0.4980,0.4706],
  [0.6157,0.5176,0.4980],
  [0.6755,0.6157,0.5176],
  [0.7647,0.6588,0.5765],
  [0.6627,0.5686,0.5216],
  [0.6863,0.5549,0.5137],
  [0.6726,0.4078,0.3451],
  [0.6118,0.4196,0.4000],
  [0.5490,0.4353,0.4196],
  [0.7098,0.6118,0.4902],
  [0.7470,0.6118,0.5020],
  [0.6235,0.5137,0.4706],
  [0.7176,0.4941,0.4157],
  [0.6941,0.3509,0.2784],
  [0.6275,0.3804,0.3451],
  [0.5137,0.3765,0.3686],
  [0.6941,0.5647,0.3922],
  [0.7647,0.5216,0.3686],
  [0.6392,0.4667,0.4314],
  [0.6824,0.4471,0.3373],
  [0.6392,0.5686,0.5137],
  [0.6824,0.6039,0.5098],
  [0.5373,0.5098,0.4863],
  [0.4784,0.4588,0.4471],
  [0.6342,0.5666,0.5137],
  [0.4431,0.4706,0.4275],
  [0.4353,0.4706,0.4667],
  [0.6039,0.5137,0.4588],
  [0.7020,0.5725,0.4039],
  [0.5294,0.4549,0.3961],
  [0.4549,0.4353,0.4235],
  [0.6794,0.5725,0.4980],
  [0.4157,0.4549,0.4118],
  [0.4039,0.4392,0.4510],
  [0.6275,0.4706,0.4000],
  [0.7373,0.5529,0.3412],
  [0.4873,0.3922,0.3451],
  [0.4078,0.3804,0.3569],
  [0.6588,0.4922,0.4275],
  [0.3529,0.4157,0.3647],
  [0.3373,0.3608,0.3843],
];

// some brick & some concrete
Colors.brickcrete = [
  [0.5176,0.2392,0.1647],
  [0.3490,0.2196,0.2157],
  [0.5765,0.2549,0.1961],
  [0.4510,0.2941,0.2902],
  [0.7137,0.3686,0.3294],
  [0.7569,0.4745,0.3647],
  [0.6235,0.5137,0.4706],
  [0.7176,0.4941,0.4157],
  [0.6941,0.3529,0.2784],
  [0.6275,0.3804,0.3451],
  [0.5137,0.3765,0.3686],
  [0.6941,0.5647,0.3922],
  [0.7647,0.5216,0.3686],
  [0.6392,0.4667,0.4314],
  [0.6824,0.4471,0.3373],
  [0.6392,0.5686,0.5137],
  [0.6824,0.6039,0.5098],
  [0.5373,0.5098,0.4863],
  [0.4784,0.4588,0.4471],
  [0.6392,0.5686,0.5137],
  [0.4431,0.4706,0.4275],
  [0.4353,0.4706,0.4667],
  [0.6039,0.5137,0.4588],
];


Colors.roof = [
  [0.8510,0.8471,0.8392],
  [0.5255,0.5294,0.5490],
  [0.9451,0.8824,0.7922],
  [0.5490,0.4902,0.4627],
  [56/255.0,57/255.0,59/255.0],
  [88/255.0,102/255.0,111/255.0],
  [86/255.0,91/255.0,95/255.0],
  [87/255.0,93/255.0,93/255.0],
  [86/255.0,83/255.0,68/255.0],
  [39/255.0,42/255.0,42/255.0],
  [112/255.0,114/255.0,139/255.0],
];

for (let i=0; i<Colors.roof.length; ++i) {
  for (let j=0; j<3; ++j) {
    Colors.roof[i][j] = 0.6 * Colors.roof[i][j];
  }
}

Colors.brighten = (color, amount) => {
  return [
    color[0] + amount * (1 - color[0]),
    color[1] + amount * (1 - color[2]),
    color[2] + amount * (1 - color[2])
  ];
}

export {Colors};
